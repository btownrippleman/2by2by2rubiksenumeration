       #ok, so the point of this code is to enumerate all the 3^7 * 8!/ 24, i.e. 3674160 different combinations of a pocket
       # cube
       
       # first step:
       # visualize the cube 
       
       #each corner will have a number starting with the top back left cube being 1, going clockwise on the top layer
       # around to the top front left cube being four and then starting with the bottom back left cube at 
       # 5, going around clockwise on the bottom layer to the front bottom left corner at 8
       # each corner will then having a color for each cordinate wherein the current orientation gives 
       # the top:blue, right:yellow, front:red, back:orange, left:white, bottom: green
       # TOP_BACK_LEFT = 1
       # TOP_BACK_RIGHT = 2
       # TOP_RIGHT_LEFT = 
       #color domains
    1: W = "white"
    1: O = "orange"
    1: B = "blue"
    1: Y = "yellow"
    1: G = "green"
    1: R = "red"
       # TOP CUBES
       # 1 -> 2
       #      |
       #      V
       # 4 <- 3
       #
       # BOTTOM CUBES
       # 5 -> 6
       #      |
       #      V
       # 8 <- 7
    1: import copy
    2: initial_config = {1:{"x":W,"y":O,"z":B}, 2:{"x":Y,"y":O,"z":B},
    1:                                                 3:{"x":Y,"y":R,"z":B}, 4:{"x":W,"y":R,"z":B},
    1:                                                 5:{"x":W,"y":O,"z":G}, 6:{"x":Y,"y":O,"z":G},
    1:                                                 7:{"x":Y,"y":R,"z":G}, 8:{"x":W,"y":R,"z":G},
       }
       
    1: initial_color_domains = {"top":B, "right":Y, "front":R, "back":O, "left":W, "bottom":G}
       
       
       # new_config = {B: ]["top_back_left","top_back_right","top_front_left","top_front_right"],
       #                                 R:]["front_top_left","front_top_right","front_bottom_left","front_bottom_right"],
       #                                 Y:""}
       
       # new_config = {'blue': ['top_front_left', 'top_front_right', 'top_back_left', 'top_back_right'], 'yellow': ['right_front_top', 'right_front_bottom', 'right_back_top', 'right_back_bottom', 'right_top_front', 'right_top_back', 'right_bottom_front', 'right_bottom_back'], 'red': ['front_top_left', 'front_top_right', 'front_bottom_left', 'front_bottom_right', 'front_left_top', 'front_left_bottom', 'front_right_top', 'front_right_bottom'], 'orange': ['back_top_left', 'back_top_right', 'back_bottom_left', 'back_bottom_right', 'back_left_top', 'back_left_bottom', 'back_right_top', 'back_right_bottom'], 'white': ['left_front_top', 'left_front_bottom', 'left_back_top', 'left_back_bottom', 'left_top_front', 'left_top_back', 'left_bottom_front', 'left_bottom_back'], 'green': ['bottom_front_left', 'bottom_front_right', 'bottom_back_left', 'bottom_back_right']}
       
       
    1: def rotate(previous_config, direction, axis):
               new_config = copy.deepcopy(previous_config)
               if direction == 1: #.i.e. clockwise
                       # for index, axis in enumerate(]["x","y","z"]):
                       #       for adjacent_cubes in [(2,4),(3,7),(7,5),(5,2)]:
                       #               adjacent_cubes[]
                       if axis == "x": #2,3,7,6
                               new_config[2]["z"]=previous_config[3]["y"]
                               new_config[2]["y"]=previous_config[3]["z"]
                               new_config[3]["z"]=previous_config[7]["y"]
                               new_config[3]["y"]=previous_config[7]["z"]
                               new_config[7]["z"]=previous_config[6]["y"]
                               new_config[7]["y"]=previous_config[6]["z"]                      
                               new_config[6]["z"]=previous_config[2]["y"]
                               new_config[6]["y"]=previous_config[2]["z"]
                               cubes = [2,3,7,6]
                               for i,v in enumerate( cubes):
                                       new_config[v]["x"] = previous_config[cubes[(i+1)%4]]["x"]
                       if axis == "y": #4,8,7,3
                               cubes = [4,8,7,3]
                               for i,v in enumerate( cubes):
                                       new_config[v]["y"] = previous_config[cubes[(i+1)%4]]["y"]
                               new_config[4]["x"]=previous_config[8]["z"]      
                               new_config[4]["z"]=previous_config[8]["x"]
                               new_config[8]["x"]=previous_config[7]["z"]      
                               new_config[8]["z"]=previous_config[7]["x"]
                               new_config[7]["x"]=previous_config[3]["z"]      
                               new_config[7]["z"]=previous_config[3]["x"]
                               new_config[3]["x"]=previous_config[4]["z"]      
                               new_config[3]["z"]=previous_config[4]["x"]              
       
                       if axis == "z":
                               cubes = [1,2,3,4]
                               for i,v in enumerate( cubes):
                                       new_config[v]["z"] = previous_config[cubes[(i-1)%4]]["z"]
                               new_config[1]["y"]=previous_config[4]["x"]
                               new_config[1]["x"]=previous_config[4]["y"]
                               new_config[2]["y"]=previous_config[1]["x"]
                               new_config[2]["x"]=previous_config[1]["y"]
                               new_config[3]["y"]=previous_config[2]["x"]
                               new_config[3]["x"]=previous_config[2]["y"]
                               new_config[4]["y"]=previous_config[3]["x"]
                               new_config[4]["x"]=previous_config[3]["y"]
               if direction == -1:
                       if axis == "x":
                               cubes = [2,3,7,6]
                               for i,v in enumerate( cubes):
                                       new_config[v]["x"] = previous_config[cubes[(i-1)%4]]["x"]
                               new_config[3]["z"]=previous_config[2]["y"]
                               new_config[3]["y"]=previous_config[2]["z"]
                               new_config[7]["z"]=previous_config[3]["y"]
                               new_config[7]["y"]=previous_config[3]["z"]
                               new_config[6]["z"]=previous_config[7]["y"]
                               new_config[6]["y"]=previous_config[7]["z"]                      
                               new_config[2]["z"]=previous_config[6]["y"]
                               new_config[2]["y"]=previous_config[6]["z"]
                       if axis == "y": #
                               cubes = [4,8,7,3]
                               for i,v in enumerate( cubes):
                                       new_config[v]["y"] = previous_config[cubes[(i-1)%4]]["y"]
       
                               new_config[3]["x"]=previous_config[7]["z"]      
                               new_config[3]["z"]=previous_config[7]["x"]
                               new_config[7]["x"]=previous_config[8]["z"]      
                               new_config[7]["z"]=previous_config[8]["x"]
                               new_config[8]["x"]=previous_config[4]["z"]      
                               new_config[8]["z"]=previous_config[4]["x"]
                               new_config[4]["x"]=previous_config[3]["z"]      
                               new_config[4]["z"]=previous_config[3]["x"]      
                       if axis == "z":
                               cubes = [1,2,3,4]
                               for i,v in enumerate( cubes):
                                       new_config[v]["z"] = previous_config[cubes[(i+1)%4]]["z"]
                               new_config[4]["y"]=previous_config[1]["x"]
                               new_config[4]["x"]=previous_config[1]["y"]
                               new_config[1]["y"]=previous_config[2]["x"]
                               new_config[1]["x"]=previous_config[2]["y"]
                               new_config[2]["y"]=previous_config[3]["x"]
                               new_config[2]["x"]=previous_config[3]["y"]
                               new_config[3]["y"]=previous_config[4]["x"]
                               new_config[3]["x"]=previous_config[4]["y"]
               return new_config
       
    1: def check_if_all_sides_same_color(config):
    1:         top = config[1]["z"]
    1:         print(top)
    4:         for i in [2,3,4]:
    3:                 if config[i]["z"] != top:
                               return False
    1:         left = config[1]["x"]
    4:         for i in [4,8,5]:
    3:                 if config[i]["x"] != left:
                               return False
    1:         back = config[1]["z"]
    2:         for i in [2,6,5]:
    2:                 if config[i]["z"] != back:
    1:                         return False
               front = config[7]["y"]
               for i in [8,4,3]:
                       if config[i]["y"] != front:
                               return False
               right = config[7]["x"]
               for i in [6,2,3]:
                       if config[i]["x"] != right:
                               return False    
               bottom = config[7]["z"]
               for i in [5,6,8]:
                       if config[i]["z"] != bottom:
                               return False
               return True
    9: for key in initial_config.keys():
    8:         print(key,initial_config[key])
       
    1: print( check_if_all_sides_same_color(initial_config))
       
       
       
       # for n in range(50):
       #       config = initial_config
       #       for i in [(1,"x"),(1,"y"),(-1,"x"),(-1,"y")]*n:
       #               config = rotate(config,i[0],i[1])
       #       if (config == initial_config):
       #               print(n, True)
